{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/App.jsx","index.js","components/Section/Section.module.css"],"names":["Section","title","children","className","styles","FeedbackOptions","onLeaveFeedback","type","name","onClick","Notification","message","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","App","state","e","target","setState","countPositiveFeedbackPercentage","Math","round","countTotalFeedback","this","props","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"sRAceA,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAASC,UAAWC,IAAOH,OACzB,4BAAKA,GACJC,KCUQG,EAfS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,oCACE,4BAAQC,KAAK,SAASC,KAAK,OAAOC,QAASH,GAA3C,QAGA,4BAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,GAA9C,WAGA,4BAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,GAA1C,SCPEI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,IAE1CD,EAAaE,aAAe,CAC1BD,QAAS,IAOID,QCMAG,EAjBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,6BACE,0CACA,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,OCHiBC,E,2MACnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAKPV,gBAAkB,SAAAe,GAChB,IACQb,EAASa,EAAEC,OAAXd,KACR,EAAKe,UAAS,SAAAH,GAAK,sBAChBZ,EAAOY,EAAMZ,GAHH,O,EAMfgB,gCAAkC,SAAAH,GAAM,IAAD,EACN,EAAKD,MAA5BN,EAD6B,EAC7BA,KAAMC,EADuB,EACvBA,QAASC,EADc,EACdA,IACvB,OAAOS,KAAKC,MAAOZ,GAAQA,EAAOC,EAAUC,GAAQ,M,EAEtDW,mBAAqB,SAAAN,GAAM,IAAD,EACO,EAAKD,MACpC,OAFwB,EAChBN,KADgB,EACVC,QADU,EACDC,K,wEAKf,IAAD,EACwBY,KAAKR,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CAASf,MAAO2B,KAAKC,MAAM5B,OACzB,kBAAC,EAAD,CAAiBK,gBAAiBsB,KAAKtB,kBACtCsB,KAAKD,qBAAuB,EAC3B,kBAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,KAAKD,qBACZT,mBAAoBU,KAAKJ,oCAG3B,kBAAC,EAAD,CAAcb,QAAQ,4B,GAzCDmB,aAAZX,EAMZP,aAAe,CACpBX,MAAO,yBCTX8B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDC,EAAOC,QAAU,CAAC,MAAQ,0B","file":"static/js/main.eb01890c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <section className={styles.title}>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  </>\r\n);\r\nSection.propTypes = {\r\n  title: PropTypes.string\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\r\n  <>\r\n    <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\r\n      good\r\n    </button>\r\n    <button type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\r\n      neutral\r\n    </button>\r\n    <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\r\n      bad\r\n    </button>\r\n  </>\r\n);\r\nFeedbackOptions.propTypes = { onLeaveFeedback: PropTypes.func.isRequired };\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.defaultProps = {\r\n  message: \"\"\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div>\r\n    <h2>Statistics</h2>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positivePercentage}%</p>\r\n  </div>\r\n);\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired\r\n};\r\nexport default Statistics;\r\n","import React, { Component } from \"react\";\r\nimport Section from \"./Section/Section\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Notification from \"./Notification/Notification\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n  static defaultProps = {\r\n    title: \"Please leave feedback\"\r\n  };\r\n  onLeaveFeedback = e => {\r\n    const step = 1;\r\n    const { name } = e.target;\r\n    this.setState(state => ({\r\n      [name]: state[name] + step\r\n    }));\r\n  };\r\n  countPositiveFeedbackPercentage = e => {\r\n    const { good, neutral, bad } = this.state;\r\n    return Math.round((good / (good + neutral + bad)) * 100);\r\n  };\r\n  countTotalFeedback = e => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <>\r\n        <Section title={this.props.title}>\r\n          <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} />\r\n          {this.countTotalFeedback() > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n} /* {\r\n    return (\r\n      <>\r\n        <Section title={this.props.title}>\r\n          <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback} />\r\n\r\n          <span> Good: {this.state.good}</span>\r\n          <span> Neutral: {this.state.neutral}</span>\r\n          <span> Bad: {this.state.bad}</span>\r\n          {this.countTotalFeedback() > 0 && (\r\n            <p>You have {this.countTotalFeedback()} unread messages.</p>\r\n          )}\r\n          {this.countPositiveFeedbackPercentage() > 0 && (\r\n            <p>Positive feedback: {this.countPositiveFeedbackPercentage()}</p>\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n} */\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__9kL6L\"};"],"sourceRoot":""}